graph TB
    %% User and External Services
    USER[👤 User] 
    GITHUB[🐙 GitHub Repository]
    
    %% Frontend Layer
    subgraph "Frontend (S3 Static Hosting)"
        FE[📄 index.html<br/>Upload Interface]
    end
    
    %% API Layer
    subgraph "API Gateway"
        APIGW[🌐 HTTP API Gateway<br/>CORS Enabled<br/>$default stage]
    end
    
    %% Compute Layer
    subgraph "AWS Lambda"
        LAMBDA[🐳 Container Image<br/>FastAPI + Mangum<br/>Python 3.11<br/>Memory: 1024MB<br/>Timeout: 60s]
    end
    
    %% Processing Layer
    subgraph "Lambda Runtime"
        APP[⚡ FastAPI App<br/>POST /upload<br/>GET /status/{id}<br/>GET /results/{id}]
        PROC[🗺️ DEM Processing<br/>rasterio + numpy<br/>np.gradient slope calc<br/>ADA threshold check]
    end
    
    %% Storage Layer (Future)
    subgraph "Storage (Future Implementation)"
        DDB[(🗄️ DynamoDB<br/>Job State<br/>Pay-per-request)]
        S3STORE[(📦 S3 Bucket<br/>Result Artifacts<br/>Large DEMs)]
    end
    
    %% Container Registry
    subgraph "Container Infrastructure"
        ECR[📋 ECR Repository<br/>ada-slope-api<br/>Docker Images]
    end
    
    %% CI/CD Pipeline
    subgraph "CI/CD (GitHub Actions)"
        PYCI[🔍 Python CI<br/>ruff, black, mypy<br/>pytest coverage]
        BUILD[🏗️ ECR Build<br/>Docker build/push<br/>On tags (v*)]
        TFPLAN[📋 Terraform Plan<br/>Infrastructure validation<br/>On PRs]
    end
    
    %% Infrastructure as Code
    subgraph "Infrastructure (Terraform)"
        TF[🏗️ Terraform<br/>AWS Provider ≥5.x<br/>ECR + Lambda + API GW<br/>+ S3 + DynamoDB]
    end
    
    %% User Flow
    USER -->|1. Upload DEM GeoTIFF| FE
    FE -->|2. POST /upload| APIGW
    APIGW -->|3. Invoke| LAMBDA
    LAMBDA --> APP
    APP --> PROC
    PROC -->|4. Process with rasterio| APP
    APP -->|5. Return job_id| APIGW
    APIGW -->|6. JSON Response| FE
    FE -->|7. GET /results/{id}| APIGW
    APIGW -->|8. Fetch results| LAMBDA
    LAMBDA -->|9. ADA compliance data| FE
    FE -->|10. Display results| USER
    
    %% CI/CD Flow
    GITHUB -->|Push/PR| PYCI
    GITHUB -->|Tag v*| BUILD
    BUILD -->|Push image| ECR
    ECR -->|Image URI| LAMBDA
    GITHUB -->|PR to infra/| TFPLAN
    TF -->|Deploy| APIGW
    TF -->|Deploy| LAMBDA
    TF -->|Deploy| DDB
    TF -->|Deploy| S3STORE
    
    %% Future Connections (Dashed)
    LAMBDA -.->|Future: Persist jobs| DDB
    LAMBDA -.->|Future: Store large results| S3STORE
    
    %% Styling
    classDef frontend fill:#e1f5fe,stroke:#0277bd,stroke-width:2px
    classDef api fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px
    classDef compute fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px
    classDef storage fill:#fff3e0,stroke:#ef6c00,stroke-width:2px
    classDef cicd fill:#fce4ec,stroke:#c2185b,stroke-width:2px
    classDef future fill:#f5f5f5,stroke:#9e9e9e,stroke-width:1px,stroke-dasharray: 5 5
    
    class FE frontend
    class APIGW api
    class LAMBDA,APP,PROC compute
    class ECR,TF compute
    class DDB,S3STORE future
    class PYCI,BUILD,TFPLAN cicd
